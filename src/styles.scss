@use '@angular/material' as mat;
@include mat.core();

// Define a dark theme
$dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: mat.define-palette(mat.$red-palette),
            accent: mat.define-palette(mat.$orange-palette)
        ),
        // Only include `typography` and `density` in the default dark theme.
        typography: mat.define-typography-config(),
        density: 0
    )
);

// Define a light theme
$light-theme: mat.define-light-theme(
    (
        color: (
            primary: mat.define-palette(mat.$red-palette, 700),
            accent: mat.define-palette(mat.$orange-palette, 800)
        )
    )
);

// Apply the dark theme by default
@include mat.core-theme($dark-theme);
@include mat.all-component-themes($dark-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // typography and density styles.
    @include mat.core-color($light-theme);
    @include mat.all-component-themes($light-theme);
}

:root {
    --primary-color: #2c1a0c;
    --text-color: #ffffff;
    --white-color: #fff;
    --black-color: #000;
    --not-called-color: #333;
    --called-color: #fff;

    --box-size: calc(100vw / 18);
    --border-width: 0.125vw;
    --gap-size: 0.75vw;
    --text-shadow-color: rgb(0 0 0 / 0.6);
    --text-shadow-offset: 0.075vw;

    --b-ball-color: #0b92ff;
    --i-ball-color: rgb(227, 0, 0);
    --n-ball-color: white;
    --g-ball-color: green;
    --o-ball-color: rgb(226, 223, 0);
    --b-ball-text-color: white;
    --i-ball-text-color: white;
    --n-ball-text-color: black;
    --g-ball-text-color: white;
    --o-ball-text-color: black;

    --border-color: rgb(0 0 0 / 0.2);
    --card-color: #392304;

    --card-box-shadow: 0 0 0 0.05vw rgb(0 0 0 / 0.1), 0 0 0 0.1vw rgb(0 0 0 / 0.1), 0 0 0 0.15vw rgb(0 0 0 / 0.1);
    --text-shadow-on: var(--text-shadow-offset) var(--text-shadow-offset) var(--text-shadow-offset)
        var(--text-shadow-color);
    --text-shadow: none;
    --font-family: Arial, Helvetica sans-serif;
    --text-transform: none;
    --font-weight: normal;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    margin: var(--gap-size);
    padding: 0;
    background: var(--primary-color);
    color: var(--text-color);
    font-family: var(--font-family, 'Arial, Helvetica sans-serif');
    line-height: 1;
    user-select: none;
}

[text-shadow] {
    --text-shadow: var(--text-shadow-on);
}

[bold] {
    --font-weight: bold;
}

[uppercase] {
    --text-transform: uppercase;
}

[mat-internal-form-field] label {
    color: var(--text-color);
    text-shadow: none;
}

mat-form-field [mat-internal-form-field] label,
mat-form-field span {
    color: var(--mdc-filled-text-field-input-text-color);
    text-shadow: none;
}

mat-tab-group {
    text-shadow: none;
}

mat-tab-body {
    margin: var(--gap-size) 0;
}

mat-tab-body .mat-mdc-tab-body-content {
    overflow: hidden;
}

input[matinput][type='color'] {
    cursor: pointer;
}

.card {
    font-size: 1.75vw;
    background: var(--card-color);
    padding: var(--gap-size);
    border: solid var(--border-width) var(--border-color);
    height: 100%;
    text-shadow: var(--text-shadow);
    box-shadow: var(--card-box-shadow);

    .mat-mdc-tab .mdc-tab__text-label {
        color: var(--text-color);
    }

    &[no-padding] {
        padding: 0;
    }
}

mat-form-field {
    text-shadow: none;
}

.column,
.row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--gap-size);
    flex-wrap: wrap;

    &[no-wrap] {
        flex-wrap: nowrap;
    }

    &[no-gap] {
        gap: 0;
    }
}

.column {
    flex-direction: column;

    &[stretch] {
        align-items: stretch;
    }

    &[start] {
        align-items: start;
        justify-content: start;
    }

    &[end] {
        align-items: end;
    }

    &[expand] {
        height: 100%;
    }
}

.row {
    flex-direction: row;

    &[stretch] {
        justify-content: stretch;
    }

    &[center] {
        justify-content: center;
    }

    &[start] {
        justify-content: start;
    }

    &[end] {
        justify-content: end;
    }

    &[top] {
        align-items: start;
    }

    &[expand] {
        width: 100%;
    }
}

mat-form-field[wide] {
    width: min(30rem, 80vw);
}

mat-form-field[medium] {
    width: min(20rem, 80vw);
}

mat-form-field[small] {
    width: 10rem;
}

button {
    --size: max(min(1.5vw, 1.5rem), .5rem);

    background-color: var(--primary-color);
    color: var(--text-color);
    border-radius: 50%;
    padding: calc(var(--size) * 0.2);
    display: flex;

    &:not([disabled]) {
        cursor: pointer;
    }

    &:hover {
        background-color: hsl(from var(--primary-color) h s calc(l - 2));
    }

    .mat-icon {
        height: var(--size);
        width: var(--size);
    }

    .material-icons {
        font-size: var(--size);
    }
}
